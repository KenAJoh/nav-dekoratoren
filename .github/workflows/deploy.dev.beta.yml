name: Deploy-to-dev-beta
on: workflow_dispatch

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - name: Define build environment
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  IMAGE_VERSION_RAW=$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
                  echo "CI=true" >> $GITHUB_ENV
                  echo "IMAGE_REGISTRY=docker.pkg.github.com/$(echo ${GITHUB_REPOSITORY})" >> $GITHUB_ENV
                  echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV
                  echo "IMAGE_VERSION=${IMAGE_VERSION_RAW,,}" >> $GITHUB_ENV
                  echo "GITHUB_TOKEN=$(echo ${GITHUB_TOKEN})" >> $GITHUB_ENV
            - uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Set delt skjerm variables
              run: |
                  echo "OPPORTUNITY_ID=${{ secrets.OPPORTUNITY_ID }}" >> $GITHUB_ENV
                  echo "CASETYPE_ID=${{ secrets.CASETYPE_ID }}" >> $GITHUB_ENV
                  echo "SOLUTION_ID=${{ secrets.SOLUTION_ID }}" >> $GITHUB_ENV
            - run: npm ci
            - run: npm test
            - run: npm run build
            - name: Docker build and push
              run: |
                  echo $GITHUB_TOKEN | docker login $IMAGE_REGISTRY -u ${GITHUB_REPOSITORY} --password-stdin
                  docker build -t $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION .
                  docker push $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION
            - name: Generate nais variables
              run: |
                  cat > .nais/vars.yaml <<EOF
                  namespace: personbruker
                  image: $IMAGE_REGISTRY/$IMAGE_NAME
                  version: $IMAGE_VERSION
                  OPPORTUNITY_ID: 5678
                  CASETYPE_ID: ${{ env.CASETYPE_ID }}
                  SOLUTION_ID: ${{ secrets.SOLUTION_ID }}
                  EOF
            - uses: nais/deploy/actions/deploy@master
              env:
                  CLUSTER: dev-gcp
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  RESOURCE: .nais/dev-gcp/personbruker.yaml
                  VARS: .nais/vars.yaml
